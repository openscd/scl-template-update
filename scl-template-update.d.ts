import { LitElement, TemplateResult } from 'lit';
import { TreeGrid, TreeSelection } from '@openenergytools/tree-grid';
import { MdFilledButton } from '@scopedelement/material-web/button/MdFilledButton.js';
import { MdOutlinedButton } from '@scopedelement/material-web/button/MdOutlinedButton.js';
import { MdDialog } from '@scopedelement/material-web/dialog/MdDialog.js';
import { MdFab } from '@scopedelement/material-web/fab/MdFab.js';
import { MdIcon } from '@scopedelement/material-web/icon/MdIcon.js';
import { MdFilledSelect } from '@scopedelement/material-web/select/MdFilledSelect.js';
import { MdSelectOption } from '@scopedelement/material-web/select/MdSelectOption.js';
import { MdCircularProgress } from '@scopedelement/material-web/progress/circular-progress.js';
import { MdOutlinedTextField } from '@scopedelement/material-web/textfield/MdOutlinedTextField.js';
import { AddDataObjectDialog } from './components/add-data-object-dialog.js';
import { LNodeTypeSidebar } from './components/lnodetype-sidebar.js';
declare const NsdTemplateUpdated_base: typeof LitElement & import("@open-wc/scoped-elements/lit-element.js").ScopedElementsHostConstructor;
export default class NsdTemplateUpdated extends NsdTemplateUpdated_base {
    static scopedElements: {
        'tree-grid': typeof TreeGrid;
        'md-filled-select': typeof MdFilledSelect;
        'md-select-option': typeof MdSelectOption;
        'md-fab': typeof MdFab;
        'md-icon': typeof MdIcon;
        'md-dialog': typeof MdDialog;
        'md-filled-button': typeof MdFilledButton;
        'md-outlined-button': typeof MdOutlinedButton;
        'md-circular-progress': typeof MdCircularProgress;
        'md-outlined-text-field': typeof MdOutlinedTextField;
        'add-data-object-dialog': typeof AddDataObjectDialog;
        'lnodetype-sidebar': typeof LNodeTypeSidebar;
    };
    doc?: XMLDocument;
    treeUI: TreeGrid;
    lNodeTypeUI?: MdFilledSelect;
    warningDialog?: MdDialog;
    choiceDialog?: MdDialog;
    addDataObjectDialog: HTMLElement & {
        show: () => void;
        validateForm: () => boolean;
    };
    lnodeTypeDesc: MdOutlinedTextField;
    lNodeTypes: Element[];
    selectedLNodeType?: Element;
    lNodeTypeSelection?: TreeSelection;
    nsdSelection?: TreeSelection;
    warningMsg: string;
    loading: boolean;
    fabLabel: string;
    disableAddDataObjectButton: boolean;
    updated(changedProperties: Map<string, unknown>): void;
    private resetUI;
    private openAddDataObjectDialog;
    private showWarning;
    private closeWarningDialog;
    private closeChoiceDialog;
    private saveTemplates;
    private updateLNodeTypeDescription;
    private proceedWithDataLoss;
    private handleUpdateTemplate;
    onLNodeTypeSelect(e: CustomEvent): Promise<void>;
    private addDataObjectToTree;
    private handleAddDataObject;
    renderWarning(): TemplateResult;
    renderChoice(): TemplateResult;
    renderFab(): TemplateResult;
    renderLNodeTypeControls(): TemplateResult;
    render(): TemplateResult<1>;
    static styles: import("lit").CSSResult;
}
export {};
