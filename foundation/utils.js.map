{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../foundation/utils.ts"],"names":[],"mappings":"AAEA,MAAM,UAAU,aAAa,CAAC,GAA4B;;IACxD,OAAO,KAAK,CAAC,IAAI,CACf,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,gBAAgB,CAAC,uCAAuC,CAAC,mCAAI,EAAE,CACrE,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,oBAAoB,CAClC,GAAgB,EAChB,QAAgB;;IAEhB,OAAO,CACL,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,aAAa,CAChB,6CAA6C,QAAQ,IAAI,CAC1D,mCAAI,SAAS,CACf,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,qBAAqB,CACnC,GAAgB,EAChB,mBAAkC;IAElC,IAAI,CAAC,GAAG,IAAI,CAAC,mBAAmB;QAAE,OAAO,KAAK,CAAC;IAC/C,OAAO,CAAC,CAAC,GAAG,CAAC,aAAa,CACxB,oCAAoC,mBAAmB,8BAA8B,mBAAmB,+BAA+B,mBAAmB,IAAI,CAC/J,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,eAAe,CAC7B,IAAU,EACV,SAAwB;IAExB,MAAM,YAAY,GAAkB,EAAE,CAAC;IACvC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACnC,MAAM,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,OAAO;YAAE,YAAY,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,OAAO,YAAY,CAAC;AACtB,CAAC","sourcesContent":["import { Tree, TreeSelection } from '@openenergytools/tree-grid';\n\nexport function getLNodeTypes(doc: XMLDocument | undefined): Element[] {\n  return Array.from(\n    doc?.querySelectorAll(':root > DataTypeTemplates > LNodeType') ?? []\n  );\n}\n\nexport function getSelectedLNodeType(\n  doc: XMLDocument,\n  selected: string\n): Element | undefined {\n  return (\n    doc?.querySelector(\n      `:root > DataTypeTemplates > LNodeType[id=\"${selected}\"]`\n    ) ?? undefined\n  );\n}\n\nexport function isLNodeTypeReferenced(\n  doc: XMLDocument,\n  selectedLNodeTypeID: string | null\n): boolean {\n  if (!doc || !selectedLNodeTypeID) return false;\n  return !!doc.querySelector(\n    `:root > Substation LNode[lnType=\"${selectedLNodeTypeID}\"], :root > IED LN[lnType=\"${selectedLNodeTypeID}\"], :root > IED LN0[lnType=\"${selectedLNodeTypeID}\"]`\n  );\n}\n\nexport function filterSelection(\n  tree: Tree,\n  selection: TreeSelection\n): TreeSelection {\n  const filteredTree: TreeSelection = {};\n  Object.keys(selection).forEach(key => {\n    const isThere = !!tree[key];\n    if (isThere) filteredTree[key] = selection[key];\n  });\n\n  return filteredTree;\n}\n"]}